/*
 * Wallet
 * User application
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.wallet.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.wallet.sdk.model.Link;
import io.wallet.sdk.model.ValidationError;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.io.Serializable;

/**
 * ApplicationStatusResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-24T22:57:23.435-05:00")
public class ApplicationStatusResponse implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("connections")
  private Map<String, Boolean> connections = null;

  @SerializedName("environment")
  private Map<String, String> environment = null;

  @SerializedName("errors")
  private List<ValidationError> errors = null;

  @SerializedName("host")
  private String host = null;

  @SerializedName("httpCode")
  private Integer httpCode = null;

  @SerializedName("httpMessage")
  private String httpMessage = null;

  @SerializedName("ip")
  private String ip = null;

  @SerializedName("links")
  private List<Link> links = null;

  @SerializedName("manifest")
  private Map<String, String> manifest = null;

  @SerializedName("owner")
  private String owner = null;

  @SerializedName("timestamp")
  private Long timestamp = null;

  public ApplicationStatusResponse connections(Map<String, Boolean> connections) {
    this.connections = connections;
    return this;
  }

  public ApplicationStatusResponse putConnectionsItem(String key, Boolean connectionsItem) {
    if (this.connections == null) {
      this.connections = new HashMap<String, Boolean>();
    }
    this.connections.put(key, connectionsItem);
    return this;
  }

   /**
   * Get connections
   * @return connections
  **/
  @ApiModelProperty(value = "")
  public Map<String, Boolean> getConnections() {
    return connections;
  }

  public void setConnections(Map<String, Boolean> connections) {
    this.connections = connections;
  }

  public ApplicationStatusResponse environment(Map<String, String> environment) {
    this.environment = environment;
    return this;
  }

  public ApplicationStatusResponse putEnvironmentItem(String key, String environmentItem) {
    if (this.environment == null) {
      this.environment = new HashMap<String, String>();
    }
    this.environment.put(key, environmentItem);
    return this;
  }

   /**
   * Get environment
   * @return environment
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getEnvironment() {
    return environment;
  }

  public void setEnvironment(Map<String, String> environment) {
    this.environment = environment;
  }

  public ApplicationStatusResponse errors(List<ValidationError> errors) {
    this.errors = errors;
    return this;
  }

  public ApplicationStatusResponse addErrorsItem(ValidationError errorsItem) {
    if (this.errors == null) {
      this.errors = new ArrayList<ValidationError>();
    }
    this.errors.add(errorsItem);
    return this;
  }

   /**
   * Get errors
   * @return errors
  **/
  @ApiModelProperty(value = "")
  public List<ValidationError> getErrors() {
    return errors;
  }

  public void setErrors(List<ValidationError> errors) {
    this.errors = errors;
  }

  public ApplicationStatusResponse host(String host) {
    this.host = host;
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @ApiModelProperty(value = "")
  public String getHost() {
    return host;
  }

  public void setHost(String host) {
    this.host = host;
  }

  public ApplicationStatusResponse httpCode(Integer httpCode) {
    this.httpCode = httpCode;
    return this;
  }

   /**
   * Get httpCode
   * @return httpCode
  **/
  @ApiModelProperty(value = "")
  public Integer getHttpCode() {
    return httpCode;
  }

  public void setHttpCode(Integer httpCode) {
    this.httpCode = httpCode;
  }

  public ApplicationStatusResponse httpMessage(String httpMessage) {
    this.httpMessage = httpMessage;
    return this;
  }

   /**
   * Get httpMessage
   * @return httpMessage
  **/
  @ApiModelProperty(value = "")
  public String getHttpMessage() {
    return httpMessage;
  }

  public void setHttpMessage(String httpMessage) {
    this.httpMessage = httpMessage;
  }

  public ApplicationStatusResponse ip(String ip) {
    this.ip = ip;
    return this;
  }

   /**
   * Get ip
   * @return ip
  **/
  @ApiModelProperty(value = "")
  public String getIp() {
    return ip;
  }

  public void setIp(String ip) {
    this.ip = ip;
  }

  public ApplicationStatusResponse links(List<Link> links) {
    this.links = links;
    return this;
  }

  public ApplicationStatusResponse addLinksItem(Link linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<Link>();
    }
    this.links.add(linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @ApiModelProperty(value = "")
  public List<Link> getLinks() {
    return links;
  }

  public void setLinks(List<Link> links) {
    this.links = links;
  }

  public ApplicationStatusResponse manifest(Map<String, String> manifest) {
    this.manifest = manifest;
    return this;
  }

  public ApplicationStatusResponse putManifestItem(String key, String manifestItem) {
    if (this.manifest == null) {
      this.manifest = new HashMap<String, String>();
    }
    this.manifest.put(key, manifestItem);
    return this;
  }

   /**
   * Get manifest
   * @return manifest
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getManifest() {
    return manifest;
  }

  public void setManifest(Map<String, String> manifest) {
    this.manifest = manifest;
  }

  public ApplicationStatusResponse owner(String owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @ApiModelProperty(value = "")
  public String getOwner() {
    return owner;
  }

  public void setOwner(String owner) {
    this.owner = owner;
  }

  public ApplicationStatusResponse timestamp(Long timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @ApiModelProperty(value = "")
  public Long getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(Long timestamp) {
    this.timestamp = timestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationStatusResponse applicationStatusResponse = (ApplicationStatusResponse) o;
    return Objects.equals(this.connections, applicationStatusResponse.connections) &&
        Objects.equals(this.environment, applicationStatusResponse.environment) &&
        Objects.equals(this.errors, applicationStatusResponse.errors) &&
        Objects.equals(this.host, applicationStatusResponse.host) &&
        Objects.equals(this.httpCode, applicationStatusResponse.httpCode) &&
        Objects.equals(this.httpMessage, applicationStatusResponse.httpMessage) &&
        Objects.equals(this.ip, applicationStatusResponse.ip) &&
        Objects.equals(this.links, applicationStatusResponse.links) &&
        Objects.equals(this.manifest, applicationStatusResponse.manifest) &&
        Objects.equals(this.owner, applicationStatusResponse.owner) &&
        Objects.equals(this.timestamp, applicationStatusResponse.timestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(connections, environment, errors, host, httpCode, httpMessage, ip, links, manifest, owner, timestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationStatusResponse {\n");
    
    sb.append("    connections: ").append(toIndentedString(connections)).append("\n");
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    httpCode: ").append(toIndentedString(httpCode)).append("\n");
    sb.append("    httpMessage: ").append(toIndentedString(httpMessage)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    manifest: ").append(toIndentedString(manifest)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

