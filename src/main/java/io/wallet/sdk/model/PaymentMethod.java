/*
 * Wallet
 * User application
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.wallet.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.wallet.sdk.model.Address;
import io.wallet.sdk.model.CreditCardMethod;
import java.io.IOException;
import java.io.Serializable;

/**
 * PaymentMethod
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-24T22:57:23.435-05:00")
public class PaymentMethod implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("_id")
  private String id = null;

  @SerializedName("active")
  private Boolean active = null;

  @SerializedName("address")
  private Address address = null;

  @SerializedName("creditCard")
  private CreditCardMethod creditCard = null;

  /**
   * Gets or Sets gatewayType
   */
  @JsonAdapter(GatewayTypeEnum.Adapter.class)
  public enum GatewayTypeEnum {
    PAYMENT_SPRING("PAYMENT_SPRING"),
    
    STRIPE("STRIPE"),
    
    OPENPAY("OPENPAY");

    private String value;

    GatewayTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static GatewayTypeEnum fromValue(String text) {
      for (GatewayTypeEnum b : GatewayTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<GatewayTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final GatewayTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public GatewayTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return GatewayTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("gatewayType")
  private GatewayTypeEnum gatewayType = null;

  @SerializedName("owner")
  private String owner = null;

  @SerializedName("partnerId")
  private String partnerId = null;

  @SerializedName("prefered")
  private Boolean prefered = null;

  @SerializedName("sandbox")
  private Boolean sandbox = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    CREDIT_CARD("CREDIT_CARD"),
    
    ACH("ACH"),
    
    POS("POS"),
    
    CASH("CASH"),
    
    CHECK("CHECK");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  public PaymentMethod id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public PaymentMethod active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @ApiModelProperty(value = "")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public PaymentMethod address(Address address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @ApiModelProperty(value = "")
  public Address getAddress() {
    return address;
  }

  public void setAddress(Address address) {
    this.address = address;
  }

  public PaymentMethod creditCard(CreditCardMethod creditCard) {
    this.creditCard = creditCard;
    return this;
  }

   /**
   * Get creditCard
   * @return creditCard
  **/
  @ApiModelProperty(value = "")
  public CreditCardMethod getCreditCard() {
    return creditCard;
  }

  public void setCreditCard(CreditCardMethod creditCard) {
    this.creditCard = creditCard;
  }

  public PaymentMethod gatewayType(GatewayTypeEnum gatewayType) {
    this.gatewayType = gatewayType;
    return this;
  }

   /**
   * Get gatewayType
   * @return gatewayType
  **/
  @ApiModelProperty(value = "")
  public GatewayTypeEnum getGatewayType() {
    return gatewayType;
  }

  public void setGatewayType(GatewayTypeEnum gatewayType) {
    this.gatewayType = gatewayType;
  }

  public PaymentMethod owner(String owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @ApiModelProperty(value = "")
  public String getOwner() {
    return owner;
  }

  public void setOwner(String owner) {
    this.owner = owner;
  }

  public PaymentMethod partnerId(String partnerId) {
    this.partnerId = partnerId;
    return this;
  }

   /**
   * Get partnerId
   * @return partnerId
  **/
  @ApiModelProperty(value = "")
  public String getPartnerId() {
    return partnerId;
  }

  public void setPartnerId(String partnerId) {
    this.partnerId = partnerId;
  }

  public PaymentMethod prefered(Boolean prefered) {
    this.prefered = prefered;
    return this;
  }

   /**
   * Get prefered
   * @return prefered
  **/
  @ApiModelProperty(value = "")
  public Boolean isPrefered() {
    return prefered;
  }

  public void setPrefered(Boolean prefered) {
    this.prefered = prefered;
  }

  public PaymentMethod sandbox(Boolean sandbox) {
    this.sandbox = sandbox;
    return this;
  }

   /**
   * Get sandbox
   * @return sandbox
  **/
  @ApiModelProperty(value = "")
  public Boolean isSandbox() {
    return sandbox;
  }

  public void setSandbox(Boolean sandbox) {
    this.sandbox = sandbox;
  }

  public PaymentMethod type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentMethod paymentMethod = (PaymentMethod) o;
    return Objects.equals(this.id, paymentMethod.id) &&
        Objects.equals(this.active, paymentMethod.active) &&
        Objects.equals(this.address, paymentMethod.address) &&
        Objects.equals(this.creditCard, paymentMethod.creditCard) &&
        Objects.equals(this.gatewayType, paymentMethod.gatewayType) &&
        Objects.equals(this.owner, paymentMethod.owner) &&
        Objects.equals(this.partnerId, paymentMethod.partnerId) &&
        Objects.equals(this.prefered, paymentMethod.prefered) &&
        Objects.equals(this.sandbox, paymentMethod.sandbox) &&
        Objects.equals(this.type, paymentMethod.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, active, address, creditCard, gatewayType, owner, partnerId, prefered, sandbox, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentMethod {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    creditCard: ").append(toIndentedString(creditCard)).append("\n");
    sb.append("    gatewayType: ").append(toIndentedString(gatewayType)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    partnerId: ").append(toIndentedString(partnerId)).append("\n");
    sb.append("    prefered: ").append(toIndentedString(prefered)).append("\n");
    sb.append("    sandbox: ").append(toIndentedString(sandbox)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

