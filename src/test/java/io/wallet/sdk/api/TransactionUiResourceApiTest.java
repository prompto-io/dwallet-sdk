/*
 * Wallet
 * User application
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.wallet.sdk.api;

import io.wallet.sdk.api.ApiException;
import io.wallet.sdk.model.RechargeRequest;
import io.wallet.sdk.model.RestResponse;
import io.wallet.sdk.model.TransactionListResponse;
import io.wallet.sdk.model.TransactionRequest;
import io.wallet.sdk.model.TransactionResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransactionUiResourceApi
 */
//@Ignore
public class TransactionUiResourceApiTest {

    private final TransactionUiResourceApi api = new TransactionUiResourceApi( "", "");

    
    /**
     * addBalance
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addBalanceUsingPOSTTest() throws ApiException {
    
    	try{
    	
	        String userId = null;
	        TransactionRequest request = null;
	        RestResponse response = api.addBalanceUsingPOST(userId, request);
	   }
	   catch(Exception e){
	   }

        // TODO: test validations
    }
    
    /**
     * addReward
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addRewardUsingPOSTTest() throws ApiException {
    
    	try{
    	
	        String userId = null;
	        TransactionRequest request = null;
	        RestResponse response = api.addRewardUsingPOST(userId, request);
	   }
	   catch(Exception e){
	   }

        // TODO: test validations
    }
    
    /**
     * deductBalance
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deductBalanceUsingPOSTTest() throws ApiException {
    
    	try{
    	
	        String userId = null;
	        TransactionRequest request = null;
	        RestResponse response = api.deductBalanceUsingPOST(userId, request);
	   }
	   catch(Exception e){
	   }

        // TODO: test validations
    }
    
    /**
     * deductReward
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deductRewardUsingPOSTTest() throws ApiException {
    
    	try{
    	
	        String userId = null;
	        TransactionRequest request = null;
	        RestResponse response = api.deductRewardUsingPOST(userId, request);
	   }
	   catch(Exception e){
	   }

        // TODO: test validations
    }
    
    /**
     * list
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listUsingGET2Test() throws ApiException {
    
    	try{
    	
	        TransactionListResponse response = api.listUsingGET2();
	   }
	   catch(Exception e){
	   }

        // TODO: test validations
    }
    
    /**
     * list
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listUsingGET3Test() throws ApiException {
    
    	try{
    	
	        String userId = null;
	        TransactionListResponse response = api.listUsingGET3(userId);
	   }
	   catch(Exception e){
	   }

        // TODO: test validations
    }
    
    /**
     * pay
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void payUsingPOSTTest() throws ApiException {
    
    	try{
    	
	        TransactionRequest request = null;
	        RestResponse response = api.payUsingPOST(request);
	   }
	   catch(Exception e){
	   }

        // TODO: test validations
    }
    
    /**
     * recharge
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void rechargeUsingPOSTTest() throws ApiException {
    
    	try{
    	
	        RechargeRequest request = null;
	        TransactionResponse response = api.rechargeUsingPOST(request);
	   }
	   catch(Exception e){
	   }

        // TODO: test validations
    }
    
}
